// Code generated by protoc-gen-go.
// source: configuration.proto
// DO NOT EDIT!

/*
Package dhcp is a generated protocol buffer package.

It is generated from these files:
	configuration.proto

It has these top-level messages:
	Endpoint
	EndpointConfiguration
	AllConfigurations
	SetConfigurationResponse
	RemoveConfigurationResponse
*/
package dhcp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Endpoint struct {
	// MAC address of endpoint
	HardwareAddress  []byte `protobuf:"bytes,1,req,name=hardware_address,json=hardwareAddress" json:"hardware_address,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Endpoint) GetHardwareAddress() []byte {
	if m != nil {
		return m.HardwareAddress
	}
	return nil
}

type EndpointConfiguration struct {
	// Endpoint defines for which machine this configuration is
	Endpoint *Endpoint `protobuf:"bytes,1,req,name=endpoint" json:"endpoint,omitempty"`
	// Ipv4Address is resultant machine ip address
	Ipv4Address *string `protobuf:"bytes,2,req,name=ipv4_address,json=ipv4Address" json:"ipv4_address,omitempty"`
	// Routes provides list of routes for particular machine
	Routes           []*EndpointConfiguration_Route `protobuf:"bytes,3,rep,name=routes" json:"routes,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *EndpointConfiguration) Reset()                    { *m = EndpointConfiguration{} }
func (m *EndpointConfiguration) String() string            { return proto.CompactTextString(m) }
func (*EndpointConfiguration) ProtoMessage()               {}
func (*EndpointConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EndpointConfiguration) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *EndpointConfiguration) GetIpv4Address() string {
	if m != nil && m.Ipv4Address != nil {
		return *m.Ipv4Address
	}
	return ""
}

func (m *EndpointConfiguration) GetRoutes() []*EndpointConfiguration_Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type EndpointConfiguration_Route struct {
	// Destination address, e.x. "192.168.128.5/32" or "192.168.128/24"
	Destination *string `protobuf:"bytes,1,req,name=destination" json:"destination,omitempty"`
	// Router address, e.x. "192.168.0.1"
	Through          *string `protobuf:"bytes,2,req,name=through" json:"through,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EndpointConfiguration_Route) Reset()                    { *m = EndpointConfiguration_Route{} }
func (m *EndpointConfiguration_Route) String() string            { return proto.CompactTextString(m) }
func (*EndpointConfiguration_Route) ProtoMessage()               {}
func (*EndpointConfiguration_Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *EndpointConfiguration_Route) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *EndpointConfiguration_Route) GetThrough() string {
	if m != nil && m.Through != nil {
		return *m.Through
	}
	return ""
}

type AllConfigurations struct {
	// EndpointConfigurations stores all configurations already received by server
	EndpointConfigurations []*EndpointConfiguration `protobuf:"bytes,1,rep,name=endpoint_configurations,json=endpointConfigurations" json:"endpoint_configurations,omitempty"`
	XXX_unrecognized       []byte                   `json:"-"`
}

func (m *AllConfigurations) Reset()                    { *m = AllConfigurations{} }
func (m *AllConfigurations) String() string            { return proto.CompactTextString(m) }
func (*AllConfigurations) ProtoMessage()               {}
func (*AllConfigurations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllConfigurations) GetEndpointConfigurations() []*EndpointConfiguration {
	if m != nil {
		return m.EndpointConfigurations
	}
	return nil
}

type SetConfigurationResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetConfigurationResponse) Reset()                    { *m = SetConfigurationResponse{} }
func (m *SetConfigurationResponse) String() string            { return proto.CompactTextString(m) }
func (*SetConfigurationResponse) ProtoMessage()               {}
func (*SetConfigurationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type RemoveConfigurationResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveConfigurationResponse) Reset()                    { *m = RemoveConfigurationResponse{} }
func (m *RemoveConfigurationResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveConfigurationResponse) ProtoMessage()               {}
func (*RemoveConfigurationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Endpoint)(nil), "dhcp.Endpoint")
	proto.RegisterType((*EndpointConfiguration)(nil), "dhcp.EndpointConfiguration")
	proto.RegisterType((*EndpointConfiguration_Route)(nil), "dhcp.EndpointConfiguration.Route")
	proto.RegisterType((*AllConfigurations)(nil), "dhcp.AllConfigurations")
	proto.RegisterType((*SetConfigurationResponse)(nil), "dhcp.SetConfigurationResponse")
	proto.RegisterType((*RemoveConfigurationResponse)(nil), "dhcp.RemoveConfigurationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for DHCPConfiguration service

type DHCPConfigurationClient interface {
	// SetConfiguration provides network configuration for particular endpoint mac address
	SetConfiguration(ctx context.Context, in *EndpointConfiguration, opts ...grpc.CallOption) (*SetConfigurationResponse, error)
	// RemoveConfiguration removes endpoint configuration from local config map
	RemoveConfiguration(ctx context.Context, in *Endpoint, opts ...grpc.CallOption) (*RemoveConfigurationResponse, error)
}

type dHCPConfigurationClient struct {
	cc *grpc.ClientConn
}

func NewDHCPConfigurationClient(cc *grpc.ClientConn) DHCPConfigurationClient {
	return &dHCPConfigurationClient{cc}
}

func (c *dHCPConfigurationClient) SetConfiguration(ctx context.Context, in *EndpointConfiguration, opts ...grpc.CallOption) (*SetConfigurationResponse, error) {
	out := new(SetConfigurationResponse)
	err := grpc.Invoke(ctx, "/dhcp.DHCPConfiguration/SetConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dHCPConfigurationClient) RemoveConfiguration(ctx context.Context, in *Endpoint, opts ...grpc.CallOption) (*RemoveConfigurationResponse, error) {
	out := new(RemoveConfigurationResponse)
	err := grpc.Invoke(ctx, "/dhcp.DHCPConfiguration/RemoveConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DHCPConfiguration service

type DHCPConfigurationServer interface {
	// SetConfiguration provides network configuration for particular endpoint mac address
	SetConfiguration(context.Context, *EndpointConfiguration) (*SetConfigurationResponse, error)
	// RemoveConfiguration removes endpoint configuration from local config map
	RemoveConfiguration(context.Context, *Endpoint) (*RemoveConfigurationResponse, error)
}

func RegisterDHCPConfigurationServer(s *grpc.Server, srv DHCPConfigurationServer) {
	s.RegisterService(&_DHCPConfiguration_serviceDesc, srv)
}

func _DHCPConfiguration_SetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointConfiguration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHCPConfigurationServer).SetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhcp.DHCPConfiguration/SetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHCPConfigurationServer).SetConfiguration(ctx, req.(*EndpointConfiguration))
	}
	return interceptor(ctx, in, info, handler)
}

func _DHCPConfiguration_RemoveConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Endpoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHCPConfigurationServer).RemoveConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhcp.DHCPConfiguration/RemoveConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHCPConfigurationServer).RemoveConfiguration(ctx, req.(*Endpoint))
	}
	return interceptor(ctx, in, info, handler)
}

var _DHCPConfiguration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dhcp.DHCPConfiguration",
	HandlerType: (*DHCPConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetConfiguration",
			Handler:    _DHCPConfiguration_SetConfiguration_Handler,
		},
		{
			MethodName: "RemoveConfiguration",
			Handler:    _DHCPConfiguration_RemoveConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("configuration.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4e, 0xb3, 0x40,
	0x14, 0xc5, 0xfb, 0xe7, 0xfb, 0xb4, 0xbd, 0x34, 0xda, 0x4e, 0xa3, 0x12, 0x1a, 0x0d, 0x9d, 0x15,
	0xba, 0x60, 0x41, 0x74, 0xe1, 0xb2, 0x41, 0x13, 0xe3, 0x4a, 0x47, 0xf7, 0x0d, 0xe9, 0x8c, 0x65,
	0x92, 0x3a, 0x43, 0x66, 0x86, 0xfa, 0x5e, 0x3e, 0x94, 0xcf, 0x61, 0xa0, 0xd0, 0x14, 0x82, 0x2c,
	0x39, 0xe7, 0xdc, 0x7b, 0x7e, 0xcc, 0x85, 0xe9, 0x4a, 0x8a, 0x0f, 0xbe, 0x4e, 0x55, 0x64, 0xb8,
	0x14, 0x7e, 0xa2, 0xa4, 0x91, 0xe8, 0x1f, 0x8d, 0x57, 0x09, 0xbe, 0x83, 0xc1, 0xa3, 0xa0, 0x89,
	0xe4, 0xc2, 0xa0, 0x6b, 0x18, 0xc7, 0x91, 0xa2, 0x5f, 0x91, 0x62, 0xcb, 0x88, 0x52, 0xc5, 0xb4,
	0xb6, 0xbb, 0x6e, 0xcf, 0x1b, 0x91, 0xd3, 0x52, 0x5f, 0xec, 0x64, 0xfc, 0xd3, 0x85, 0xb3, 0x72,
	0x2e, 0x3c, 0x5c, 0x8e, 0x6e, 0x60, 0xc0, 0x0a, 0x23, 0x1f, 0xb6, 0x82, 0x13, 0x3f, 0x6b, 0xf2,
	0xcb, 0x38, 0xd9, 0xfb, 0x68, 0x0e, 0x23, 0x9e, 0x6c, 0x6f, 0xf7, 0x65, 0x3d, 0xb7, 0xe7, 0x0d,
	0x89, 0x95, 0x69, 0x45, 0x11, 0xba, 0x87, 0x23, 0x25, 0x53, 0xc3, 0xb4, 0xdd, 0x77, 0xfb, 0x9e,
	0x15, 0xcc, 0xab, 0xcb, 0x2a, 0xdd, 0x3e, 0xc9, 0x92, 0xa4, 0x18, 0x70, 0x42, 0xf8, 0x9f, 0x0b,
	0xc8, 0x05, 0x8b, 0x32, 0x6d, 0xb8, 0xc8, 0x53, 0x39, 0xd5, 0x90, 0x1c, 0x4a, 0xc8, 0x86, 0x63,
	0x13, 0x2b, 0x99, 0xae, 0xe3, 0x82, 0xa1, 0xfc, 0xc4, 0x1c, 0x26, 0x8b, 0xcd, 0xa6, 0x52, 0xa3,
	0xd1, 0x3b, 0x5c, 0x94, 0xff, 0xb0, 0xac, 0x3c, 0x6d, 0xf6, 0x5e, 0x19, 0xe5, 0xac, 0x85, 0x92,
	0x9c, 0xb3, 0x26, 0x59, 0x63, 0x07, 0xec, 0x37, 0x56, 0xcb, 0x32, 0x9d, 0x48, 0xa1, 0x19, 0xbe,
	0x84, 0x19, 0x61, 0x9f, 0x72, 0xcb, 0x1a, 0xed, 0xe0, 0xbb, 0x0b, 0x93, 0x87, 0xa7, 0xf0, 0xa5,
	0x7a, 0x8a, 0x57, 0x18, 0xd7, 0x17, 0xa2, 0x36, 0x32, 0xe7, 0x6a, 0x67, 0xfe, 0x49, 0xd1, 0x41,
	0xcf, 0x30, 0x6d, 0xe0, 0x40, 0xb5, 0x13, 0x3b, 0xc5, 0x95, 0x5a, 0x90, 0x71, 0xe7, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xfc, 0x6e, 0xf8, 0x93, 0x96, 0x02, 0x00, 0x00,
}
