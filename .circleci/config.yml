version: 2
jobs:
  build:
    docker:
    - image: ubuntu:xenial
    working_directory: ~/virtlet
    environment:
      DOCKER_VERSION: "17.03.0-ce"
    steps:
    - run:
        name: Ensure prerequisites
        command: |
          apt-get -qq update
          apt-get install -y libxml2-utils jq curl ca-certificates openssh-client rsync socat wget git

    - checkout
    - setup_remote_docker

    - run:
        name: Install Docker client
        command: |
          set -x
          curl -sSL -o "/tmp/docker-${DOCKER_VERSION}.tgz" "https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz"
          tar -xz -C /tmp -f "/tmp/docker-${DOCKER_VERSION}.tgz"
          mv /tmp/docker/* /usr/bin

    - run:
        name: Disable apparmor on the remote docker VM
        # TODO: use smaller image for nsenter.
        # Or, even better, learn to live with apparmor
        command: |
          docker run --rm --pid=host -it --privileged ubuntu:xenial \
            nsenter -t 1 -m -u -i -n /bin/bash -c \
            "service apparmor stop &&
             service apparmor teardown &&
             update-rc.d -f apparmor remove &&
             apt-get remove -y apparmor"

    - run:
        name: Start port forwarder
        command: |
          build/portforward.sh start

    - run:
        name: Build virtlet
        command: |
          build/portforward.sh 18730&
          build/cmd.sh build
          build/cmd.sh copy

    - run:
        name: Run tests
        command: |
          build/portforward.sh 18730&
          build/cmd.sh test

    - run:
        name: Build virtlet image
        command: |
          docker build -t mirantis/virtlet .

    - run:
        name: Start the demo
        command: |
          build/portforward.sh 8080&
          VIRTLET_DEMO_RELEASE=master \
            NONINTERACTIVE=1 \
            NO_VM_CONSOLE=1 \
            INJECT_LOCAL_IMAGE=1 \
            VIRTLET_DEMO_RELEASE=master \
            BASE_LOCATION="$PWD" \
            deploy/demo.sh

    - run:
        name: Run e2e tests
        command: |
          build/portforward.sh 8080&
          _output/virtlet-e2e-tests -test.v
